---

#Add new ssh users and their keys

- name: "Make sure we have a 'wheel' group"
  group:
      name: wheel
      state: present

- name: "Allow 'wheel' group to have passwordless sudo"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: "%wheel ALL=(ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"

- name: "Create a new user and add them to the wheel group"
  user:
    append: true
    createhome: true
    groups: wheel
    name: "{{ item.name }}"
    state: present
  with_items: "{{ ssh_users }}"
  when: item.name != "nobody"

- name: Set up users authorized keys
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.key }}"
    exclusive: True
  with_items: "{{ ssh_users }}"
  when: item.name != "nobody"

#Remove users with uid > 1000 and not in the ssh_users list

- name: Fetch a list of all the current users in the selected server/s
  shell: "getent passwd | awk -F: '$3 > 1000 {print $1}'"
  register: current_users
  changed_when: false

# - debug:
#     var: current_users.stdout_lines

- name: Fetch a list of all currently approved users as per our config varriable ssh_users
  set_fact: approved_users="{{ ssh_users | map(attribute='name') | list }}"

# - debug:
#     var: approved_users

- name: Now removing unapproved user profiles still in the selected server/s
  user: name={{item}} state=absent remove=yes
  with_items: "{{ current_users.stdout_lines }}"
  when: item not in approved_users



# - name: Add identity key to authorized keys on host
#   authorized_key: user={{ ssh_user }}
#     key="{{ lookup('file', ssh_identity_key) }}"
#   register: add_identity_key
#   when: ssh_identity_key is defined and ssh_user is defined
#
# - name: Disable empty password login
#   lineinfile: dest={{ sshd_config }} regexp="^#?PermitEmptyPasswords" line="PermitEmptyPasswords no"
#   notify: restart sshd
#
# - name: Disable remote root login
#   lineinfile: dest={{ sshd_config }} regexp="^#?PermitRootLogin" line="PermitRootLogin no"
#   notify: restart sshd
#
# - name: Disable password login
#   lineinfile: dest={{ sshd_config }} regexp="^#?PasswordAuthentication" line="PasswordAuthentication no"
#   when: add_identity_key|success and not add_identity_key|skipped
#   notify: restart sshd
#
# - name: Enable PAM
#   lineinfile: dest={{ sshd_config }} regexp="^#?UsePAM" line="UsePAM yes"
#   notify: restart sshd
